1. 뷰 결합(ViewBinding)
 - 레이아웃 파일 내부에 있는 자원을 자바의 객체 형태로 바꿔 findViewById 과정을 생략시킴. -> 귀찮음...
 -xml레이아웃 자체를 전부 바인딩 클래스로 생성을 미리 해둠.(android)
 -바인딩 인스턴스를 생성하여 사용 가능한 객체를 만담. (LayoutInflater)
    순서1  Build.gradle(module) 에서 뷰바인딩을 사용하겠다를 명시, sync -> 기본적으로  off

         viewBinding{
             enable = true
         }

    순서2. 초기화 식
        // activity_main.xml
        1.ActivityMainBinding binding;

        2. binding = ActivityMainBinding.inflate(getLayoutInflater());
        3. setContentView(binding.getRoot());

2.ActionBar
 -이전 안드로이드 버전들에서는 ActionBar를 많이 활용함.
 -현재는 ActionBar를 커스텀하는게 귀찮아서 비슷한 구조를 가진 레이아웃을 만들고 사용
 -테마에서 NoActionbar를 주면 Actionbar 자체가 없음(null), 그 외엔 getSupportActionbar 메소드로 접근 가능

3.이미지를 둥글게 처리하기
    1.CardView를 이용한 방법
        -이미지뷰를 카드뷰 내에 넣고 스케일 타입을 centerCrop으로 바꿈 넓이 높이는 match_parent
        -카드뷰에 이미지를 어떤 사이즈로 보여줄지 넣어주고 radius로 모서리를 둥글게 만든다.
        <androidx.cardview.widget.CardView
               android:layout_width="50dp"
               android:layout_height="50dp"
               app:cardCornerRadius="15dp">
               <ImageView
                   android:layout_width="match_parent"
                   android:layout_height="match_parent"
                   android:scaleType="centerCrop"
                   android:src="@drawable/profile1"/>
           </androidx.cardview.widget.CardView>

    2.CircleImageView (외부 라이브러리 활용) , Glide
    3.이미지를 그냥 둥글게 편집(x)